<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on NeiNeiHippo</title>
    <link>/post/</link>
    <description>Recent content in Posts on NeiNeiHippo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GIOS Summary</title>
      <link>/post/cs6200-gios/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/cs6200-gios/</guid>
      <description>&lt;p&gt;I took the summer class CS6200 &lt;a href=&#34;https://omscs.gatech.edu/cs-6200-introduction-operating-systems&#34; title=&#34;GIOS&#34;&gt;Graduate Introduction to Operating Systems&lt;/a&gt;, which is primarily geared towards students with non-CS background like me, and I found the course to be very informative.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IHPC Summary</title>
      <link>/post/cse6220-ihpc/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/cse6220-ihpc/</guid>
      <description>&lt;p&gt;This past spring I took the class CSE6220 &lt;a href=&#34;https://omscs.gatech.edu/cse-6220-intro-hpc&#34; title=&#34;IHPC&#34;&gt;Intro to High Performance Computing&lt;/a&gt;. Though the name says introductory, the content is pretty hard and the workload is heavy. However, the projects were quite fun. Since all projects were implemented with C, &lt;strong&gt;pointer&lt;/strong&gt; manipulation is a must to master in order to achieve a good performance score. Recursion is heavily used too.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stereo Correspondence</title>
      <link>/post/stereo/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/stereo/</guid>
      <description>&lt;p&gt;To be updated &amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nordic NRF52840 Storage Part II</title>
      <link>/post/nrf52-storage-2/</link>
      <pubDate>Tue, 19 Jan 2021 18:25:00 -0500</pubDate>
      
      <guid>/post/nrf52-storage-2/</guid>
      <description>&lt;p&gt;This post is the continued talk about the persistent storage for Nordic nRF52840. In &lt;a href=&#34;/post/nrf52-storage-1/&#34;&gt;part I&lt;/a&gt; we went over using the &lt;strong&gt;Flash Data Storage&lt;/strong&gt; (FDS) library. In &lt;a href=&#34;/post/nrf52-storage-2/&#34;&gt;this part II&lt;/a&gt;, I&amp;rsquo;ll be discussing another import component, &lt;strong&gt;user information configuration registers&lt;/strong&gt; (UICR).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nordic NRF52840 Storage Part I</title>
      <link>/post/nrf52-storage-1/</link>
      <pubDate>Tue, 12 Jan 2021 18:25:00 -0500</pubDate>
      
      <guid>/post/nrf52-storage-1/</guid>
      <description>&lt;p&gt;There are mainly two ways for persistent storage of data in NRF52840: &lt;strong&gt;flash&lt;/strong&gt; and &lt;strong&gt;UICR&lt;/strong&gt;. I&amp;rsquo;ll be discussing the flash mainly in this &lt;a href=&#34;/post/nrf52-storage-1/&#34;&gt;part I&lt;/a&gt;, and UICR in &lt;a href=&#34;/post/nrf52-storage-2/&#34;&gt;part II&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nordic BLE Advertising Part I</title>
      <link>/post/nordic-ble-02/</link>
      <pubDate>Sat, 26 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/nordic-ble-02/</guid>
      <description>&lt;p&gt;Nordic has a good tutorial &lt;a href=&#34;https://devzone.nordicsemi.com/nordic/short-range-guides/b/bluetooth-low-energy/posts/ble-advertising-a-beginners-tutorial&#34; title=&#34;adv_tutorial&#34;&gt;Bluetooth low energy Advertising, a beginner&amp;rsquo;s tutorial&lt;/a&gt;, and two guides of GAP advertising &lt;a href=&#34;https://devzone.nordicsemi.com/nordic/short-range-guides/b/bluetooth-low-energy/posts/bluetooth-smart-and-the-nordics-softdevices-part-1&#34;&gt;Part I&lt;/a&gt; and &lt;a href=&#34;https://devzone.nordicsemi.com/nordic/short-range-guides/b/bluetooth-low-energy/posts/bluetooth-smart-and-the-nordics-softdevices-part-2&#34;&gt;Part II&lt;/a&gt;. In this post, we will go through some of advertising features in details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nordic BLE Serial</title>
      <link>/post/nrf52-ble-serial/</link>
      <pubDate>Fri, 09 Oct 2020 00:57:03 -0500</pubDate>
      
      <guid>/post/nrf52-ble-serial/</guid>
      <description>&lt;p&gt;The &lt;em&gt;nRF Serial Port Library&lt;/em&gt; is &lt;em&gt;designed as a more sophisticated replacement for the app_uart module&lt;/em&gt;, as pointed out at the library&amp;rsquo;s &lt;a href=&#34;https://infocenter.nordicsemi.com/topic/sdk_nrf5_v16.0.0/serial_example.html&#34; title=&#34;serial port libraries&#34;&gt;page&lt;/a&gt;, there are many advantages of this module over app_uart:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Merge Nordic Buttonless DFU with NUS</title>
      <link>/post/nrf52-ble-dfu-02/</link>
      <pubDate>Thu, 08 Oct 2020 19:45:59 -0500</pubDate>
      
      <guid>/post/nrf52-ble-dfu-02/</guid>
      <description>&lt;p&gt;Nordic provides good examples, but mostly independent from each other. To make a BLE UART service with DFU support, we&amp;rsquo;ll need to merge the two examples:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nordic BLE Device Firmware Update Bootloader</title>
      <link>/post/nrf52-ble-dfu-01/</link>
      <pubDate>Sun, 26 Jul 2020 15:15:35 -0500</pubDate>
      
      <guid>/post/nrf52-ble-dfu-01/</guid>
      <description>&lt;p&gt;Noric provides detailed documentations of &lt;a href=&#34;https://infocenter.nordicsemi.com/topic/sdk_nrf5_v17.0.0/lib_bootloader_dfu_process.html&#34; title=&#34;info_bl_dfu&#34;&gt;Bootloader and DFU modules&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iMX8M Mini with AOSP Beginner Part 1</title>
      <link>/post/imx8mm-aosp-01/</link>
      <pubDate>Tue, 02 Jun 2020 14:14:31 -0500</pubDate>
      
      <guid>/post/imx8mm-aosp-01/</guid>
      <description>&lt;p&gt;I recently got an NXP i.MX 8M Mini EVK board. It has rather powerful Arm Cortex-A53, Cortex-M4, Audio, Voice and Video processors. As a total newbie with no previous experiences on Android Operation System Project (&lt;a href=&#34;https://source.android.com/&#34; title=&#34;AOSP&#34;&gt;AOSP&lt;/a&gt;) or NXP iMX series, this post records my first hands-on.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nordic BLE development with SES and VS code in Ubuntu</title>
      <link>/post/nordic-ble-01/</link>
      <pubDate>Sat, 17 Aug 2019 14:14:31 -0500</pubDate>
      
      <guid>/post/nordic-ble-01/</guid>
      <description>&lt;p&gt;The nRF5 series of Bluetooth low energy chip is a very popular platform from Nordic Semiconductor. Currently there are four &lt;a href=&#34;https://infocenter.nordicsemi.com/topic/ug_getting_started/UG/common/nordic_tools.html&#34; title=&#34;IDE&#34;&gt;IDEs&lt;/a&gt; with compiler supported by Nordic, however, for Linux users there are only two options available: SEGGER Embedded Studio (SES) and GNU/GCC.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
